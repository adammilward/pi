{"version":3,"sources":["utils/Api.js","components/Slider.js","components/LightsFade.js","components/LightsOn.js","components/Alert.js","components/Lights.js","components/Footer.js","components/App.js","index.js"],"names":["Api","errorCallBack","isBusy","queue","getData","message","callBack","priority","push","fetch","apiUrl","encodeURI","method","then","res","text","result","json","processQueue","JSON","parse","err","console","warn","toString","error","this","config","length","next","pop","Slider","props","isDragged","api","state","values","value","one","two","actionDragged","name","dragHold","allowedmax","allowedmin","setState","style","display","justifyContent","flexWrap","margin","step","min","max","rangemax","onChange","slid","renderTrack","children","height","width","ref","borderRadius","background","getTrackBackground","colors","color","alignSelf","renderThumb","onTouchEnd","backgroundColor","alignItems","boxShadow","getColor","className","id","toFixed","React","Component","LightsFade","wasDragged","radio","mode","sendRequest","toggle","fade","requestMode","slideModes","lightMode","Boolean","delay","Math","pow","map","index","checked","key","type","fadeButtons","count","u","l","LightsOn","r","power","round","g","b","bottomSlid","Alert","useAlert","show","alert","Lights","pendingOff","receiveResponse","success","response","forEach","data","Array","isArray","processLightsData","info","on","fadeDelay","reportDelay","bind","request","log","clearTimeout","requestTime","newState","log2","time","setTimeout","Footer","App","moment","hours","format","timeOfDay","displayErrors","errorsArray","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","template","AlertTemplate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d023b14.chunk.js","sourcesContent":["import config from './config.json'\nexport default class Api {\n\n  isBusy = false;\n  errorCallBack;\n  queue = [];\n\n  constructor(errorCallBack) {\n    this.errorCallBack = errorCallBack;\n    this.apiUrl = config.apiUrl;\n\n    //this.processQueue = this.processQueue.bind(this);\n  }\n\n  processQueue() {\n    if (this.queue.length) {\n      let next = this.queue.pop();\n      this.getData(next.message, next.callBack, next.priority);\n    }\n  }\n\n  /**\n   * @param {string} message\n   * @param {funciton} callBack\n   * @param {int} priority - 0 it is discarded, 1 it is placed at back of queue\n   */\n  getData = (message, callBack, priority = 0) => {\n    if (this.isBusy) {\n      if (priority) {\n        this.queue.push({message: message, callBack: callBack, priority});\n      }\n      return;\n    }\n\n    this.isBusy = true;\n    let request = fetch(\n      this.apiUrl + '?message=' + encodeURI(message),\n      {\n        method: 'GET',\n    })\n      .then((res) => {\n        return res.text();\n      })\n      .then(\n        (result) => {\n          this.isBusy = false;\n          this.processQueue();\n          let json;\n          try {\n            json = JSON.parse(result);\n            callBack('success', json);\n          } catch (err) {\n            console.warn(err);\n            console.warn(result);\n            this.errorCallBack('error', [err.toString(), result]);\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.isBusy = false;\n          this.processQueue();\n          console.warn(error);\n          this.errorCallBack('error', [error]);\n        });\n  };\n}","import React from 'react';\nimport {Range, getTrackBackground} from \"react-range\";\nimport Api from '../utils/Api'\n\nconst STEP = 0.01;\nconst MIN = 0;\nconst MAX = 255;\n\nclass Slider extends React.Component {\n\n  isDragged = false;\n  api = new Api();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: [this.props.value]\n    };\n  }\n\n  actionDragged(isDragged, one, two) {\n    // send the data when finished dragging\n    // when isDragged becomes false, and was dragged is true\n    if (! isDragged) {\n      if (this.isDragged) {\n        this.props.actionDragged(this.state.values[0], this.props.name);\n      }\n    }\n    this.isDragged = isDragged;\n    this.props.dragHold(isDragged);\n  };\n\n  slid(value) {\n    if ('undefined' !== this.props.allowedmax && value > this.props.allowedmax) {\n      value = this.props.allowedmax;\n    }\n    if (this.props.allowedmin && value < this.props.allowedmin) {\n      value = this.props.allowedmin;\n    }\n    this.setState({values: [value]});\n  }\n\n  render() {\n    //console.log(MIN);\n    return (\n    <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n          margin: \"10px\"\n        }}\n      >\n        <Range\n          values={this.state.values}\n          step={STEP}\n          min={MIN}\n          max={this.props.rangemax || MAX}\n          onChange={values => this.slid(values[0], this.props.name)}\n          renderTrack={({props, children}) => (\n            <div\n              style={{\n                ...props.style,\n                height: \"12px\",\n                display: \"flex\",\n                width: \"calc(100% - 5em)\"\n              }}\n            >\n              <div\n                ref={props.ref}\n                style={{\n                  height: \"4px\",\n                  width: \"100%\",\n                  borderRadius: \"2px\",\n                  background: getTrackBackground({\n                    values: this.state.values,\n                    colors: [this.props.color, \"#999\"],\n                    min: MIN,\n                    max: this.props.rangemax || MAX\n                  }),\n                  alignSelf: \"center\"\n                }}\n              >\n                {children}\n              </div>\n            </div>\n          )}\n          renderThumb={({props, isDragged}) => (\n            <div\n\n              {...props}\n              onTouchEnd={this.actionDragged(isDragged)}\n              style={{\n                ...props.style,\n                height: \"30px\",\n                width: \"20px\",\n                borderRadius: \"2px\",\n                backgroundColor: \"#FFF\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                boxShadow: \"0px 2px 6px #AAA\"\n              }}\n            >\n              <div\n\n                style={{\n                  height: \"50%\",\n                  width: \"40%\",\n                  backgroundColor: isDragged ? this.props.getColor(this.state.values[0]) : this.props.color\n                }}\n              />\n            </div>\n          )}\n        />\n        <output className=\"right\"\n            style={{\n              margin: \"0px 0px 0px 10px\",\n              width: '4em',\n          }} id=\"output\">\n          {\n            this.state.values[0].toFixed(1)\n          }\n        </output>\n      </div>\n    );\n  }\n}\n\nexport default Slider","import React from 'react';\nimport Slider from \"./Slider\";\nimport LightsOn from \"./LightsOn\";\n\nconst MAX_POW = 8;\n\nexport default class LightsFade extends React.Component{\n\n  wasDragged = false;\n\n  radio = (mode) => {\n    this.props.sendRequest(\n      'lights ' + mode,\n      1\n    );\n  };\n\n  toggle = (fade) => {\n    let requestMode = this.slideModes[this.props.lightMode[1]].value;\n    if (Boolean(this.props.delay)) {\n      this.props.sendRequest(\n        'lights static',\n        1\n      );\n    } else {\n      this.props.sendRequest(\n        'lights ' + requestMode,\n        1\n      );\n    }\n  };\n\n  slideModes = [\n    {name: 'LIN', value: 'lin'},\n    {name: 'SIN', value: 'sin'},\n    {name: 'EXP', value: 'exp'},\n    {name: 'S+E', value: 'sinexp'},\n  ];\n\n  fadeButtons() {\n    return this.slideModes.map((mode, index) => {\n      let checked = (index === this.props.lightMode[1]);\n      return (\n        <label key={mode.name}>\n          {mode.name} <br/>\n          <input name='fadeMode'\n                 key={mode.value}\n                 onChange={() => this.radio(mode.value)}\n                 checked={checked}\n                 type=\"radio\"\n          />\n        </label>\n      )\n    })\n  }\n\n  actionDragged = (value, name) => {\n    this.props.sendRequest('lights ' + name + ' ' + (Math.pow(2, value).toFixed() - 1 ));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"lights-fade\">\n          Fade\n          <label className=\"switch float\">\n            <input\n              type=\"checkbox\"\n              checked={Boolean(this.props.delay)}\n              onChange={this.toggle}\n            />\n            <span className=\"switch-slider round right\" />\n          </label>\n        </div>\n        {Boolean(this.props.delay) &&\n          <div className=\"fade-settings right\">\n            <div className=\"fade-mode\">\n              {this.fadeButtons()}\n            </div>\n\n\n            <div className=\"fade-sliders\" >\n              Delay &nbsp; &nbsp; &nbsp; &nbsp;\n              <Slider\n                key={'delay' + this.props.count}\n                name={'delay'}\n                value={this.props.delay}\n                color={'#333'}\n                getColor={() => 'rgb(100, 100, 100)'}\n                allowedmin={0}\n                allowedmax={MAX_POW}\n                rangemax={MAX_POW}\n                sendRequest={this.props.sendRequest}\n                actionDragged={this.actionDragged}\n                dragHold={this.props.dragHold}\n              />\n              Upper &nbsp; &nbsp; &nbsp; &nbsp;\n              <Slider\n                key={'u' + this.props.count}\n                name={'u'}\n                value={this.props.u}\n                color={'#999'}\n                getColor={() => 'rgb(250, 250, 250)'}\n                allowedmax={MAX_POW}\n                rangemax={MAX_POW}\n                allowedmin={0}\n                sendRequest={this.props.sendRequest}\n                actionDragged={this.actionDragged}\n                dragHold={this.props.dragHold}\n              />\n              Lower &nbsp; &nbsp; &nbsp; &nbsp;\n              <Slider\n                key={'l' + this.props.count}\n                name={'l'}\n                value={this.props.l}\n                color={'#aaa'}\n                getColor={() => 'rgb(50, 50, 50)'}\n                allowedmax={MAX_POW}\n                rangemax={MAX_POW}\n                allowedmin={0}\n                sendRequest={this.props.sendRequest}\n                actionDragged={this.actionDragged}\n                dragHold={this.props.dragHold}\n              />\n            </div>\n        </div>\n        }\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport Slider from './Slider'\nimport LightsFade from './LightsFade'\n\nconst MAX_POW = 100;\n\nexport default class LightsOn extends React.Component{\n\n  actionDragged = (value, name) => {\n    this.props.sendRequest('lights ' + name + ' ' + value);\n  };\n\n  render() {\n    return (\n      <div className=\"lights\" id='lights'>\n        <Slider\n          key={'r' + this.props.count}\n          name={'r'}\n          value={this.props.r}\n          color={'#f00'}\n          getColor={function (power) {\n            return 'rgb(' + Math.round(power * 2.55) + ', 0, 0)';\n          }}\n          allowedmax={MAX_POW}\n          rangemax={MAX_POW}\n          slid={this.slid}\n          sendRequest={this.props.sendRequest}\n          actionDragged={this.actionDragged}\n          dragHold={this.props.dragHold}\n        />\n        <Slider\n          key={'g' + this.props.count}\n          name={'g'}\n          value={this.props.g}\n          color={'#0f0'}\n          getColor={function (power) {\n            return 'rgb(0, ' + Math.round(power * 2.55) + ', 0)';\n          }}\n          allowedmax={MAX_POW}\n          rangemax={MAX_POW}\n          slid={this.slid}\n          sendRequest={this.props.sendRequest}\n          actionDragged={this.actionDragged}\n          dragHold={this.props.dragHold}\n        />\n        <Slider\n          key={'b' + this.props.count}\n          name={'b'}\n          value={this.props.b}\n          color={'#00f'}\n          getColor={function (power) {\n            return 'rgb(0, 0, ' + Math.round(power * 2.55) + ')';\n          }}\n          allowedmax={MAX_POW}\n          rangemax={MAX_POW}\n          slid={this.slid}\n          sendRequest={this.props.sendRequest}\n          actionDragged={this.actionDragged}\n          dragHold={this.props.dragHold}\n        />\n        <LightsFade\n          {...this.props}\n          bottomSlid={this.bottomSlid}\n        />\n      </div>\n    );\n  }\n}","// App.js\nimport React from 'react'\nimport { useAlert } from 'react-alert'\n\nconst Alert = (props) => {\n  const alert = useAlert();\n  alert.show(props.alert.message, {...props.alert});\n  return (<></>);\n};\n\nexport default Alert","import React from \"react\";\nimport LightsOn from \"./LightsOn\";\nimport Alert from \"./Alert\";\n\nconst MAX_POW = 255;\n\nexport default class Lights extends React.Component{\n\n  requestTime;\n  processHold;\n  pendingOff = false;\n  isDragged = false;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      on: false\n      , r: 0\n      , g: 0\n      , b: 0\n      , l: 1\n      , u: MAX_POW\n      , lightMode: [0, 3]\n      , delay: 0\n      , fadeDelay: 0\n      , reportDelay: 0\n      , count: 0\n    };\n    this.sendRequest('lights report');\n\n    this.dragHold = this.dragHold.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n  }\n\n  sendRequest(\n    request = 'lights report',\n    priority = 0,\n    callback = this.receiveResponse\n  ) {\n    console.log('request: ', request);\n    this.props.api.getData(request, this.receiveResponse, priority);\n  }\n\n\n  receiveResponse = (success, response) => {\n    response.forEach((data) =>{\n      if (Array.isArray(data)) {\n        this.receiveResponse(success, data)\n      } else if ('object' === typeof data) {\n        if ('lights' === data.mode) {\n          this.processLightsData(data);\n        } else if (data.info) {\n          //this.setState({alert: {message: data.info, type: 'info'}});\n        } else if (data.err) {\n          this.setState({alert: {message: data.err, type: 'error'}});\n        }\n      }\n    });\n  };\n\n  toggle = (fade) => {\n    this.pendingOff = (this.state.on);\n    this.sendRequest(\n      this.state.on ? 'lights off' : 'lights on',\n      () => this.receiveResponse,\n      1\n    );\n  };\n\n  dragHold(isDragged) {\n    this.isDragged = isDragged;\n  }\n\n  processLightsData(data) {\n    clearTimeout(this.requestTime);\n    if (typeof data !== \"object\") {\n      return;\n    }\n\n    // postpone update if dragging;\n    if (this.isDragged) {\n      //this.processHold = setTimeout(() => this.processLightsData(data), 10);\n      return;\n    }\n\n    console.log('recieved: ', data);\n\n    let newState = {\n      r: data.r < 0 ? 0 : data.r > MAX_POW ? MAX_POW : data.r,\n      g: data.g < 0 ? 0 : data.g > MAX_POW ? MAX_POW : data.g,\n      b: data.b < 0 ? 0 : data.b > MAX_POW ? MAX_POW : data.b,\n      l: Math.log2(1 + (data.l < 0 ? 0 : data.l > MAX_POW ? MAX_POW : data.l)),\n      u: Math.log2(1 + (data.u < 0 ? 0 : data.u > MAX_POW ? MAX_POW : data.u)),\n      lightMode: data.lightMode,\n      delay: Math.log2(data.delay + 1),\n      fadeDelay: data.fadeDelay,\n      reportDelay: data.reportDelay,\n      count: this.state.count + 1\n    };\n\n    console.log('setState: ', newState);\n\n    this.setState({\n      ...newState,\n      on: Boolean(newState.r || newState.g || newState.b),\n    });\n\n    if (newState.fadeDelay || newState.delay) {\n      let time = (newState.fadeDelay > newState.delay) ?\n        newState.fadeDelay / 20\n        : newState.delay * 500;\n      this.requestTime = setTimeout(() => this.sendRequest(), time)\n    } else {\n      this.requestTime = setTimeout(() => this.sendRequest(), 1000 * 30)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <label className=\"switch float\">\n          <input\n            type=\"checkbox\"\n            checked={(this.state.on && !this.pendingOff)}\n            onChange={this.toggle}\n          />\n          <span className=\"switch-slider round right\" />\n        </label>\n        {this.state.on &&\n          <LightsOn\n            {...this.state}\n            sendRequest={this.sendRequest}\n            dragHold={this.dragHold}\n          />\n        }\n        {this.state.alert && <Alert alert={this.state.alert}/>}\n      </div>\n    );\n  }\n}","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      this is the footer\n    </footer>\n  );\n}\n\nexport default Footer","import React from \"react\";\nimport Lights from './Lights';\nimport Footer from './Footer';\nimport moment from 'moment';\nimport Api from '../utils/Api.js'\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport Alert from \"./Alert\";\n\nexport default class App extends React.Component{\n\n  api;\n\n  constructor(props) {\n    super(props);\n\n    /**\n     * @type {moment.Moment}\n     */\n    const time = moment();\n    this.state = {\n      time: time,\n    };\n\n    const hours = time.format('H');\n    this.timeOfDay = 'day';\n    if (hours < 12) {\n      this.timeOfDay = 'morning';\n    } else if (hours >= 12 && hours < 17) {\n      this.timeOfDay = 'afternoon';\n    } else {\n      this.timeOfDay = 'night';\n    }\n\n    this.displayErrors = this.displayErrors.bind(this);\n\n    this.api = new Api(this.displayErrors)\n  }\n\n  componentDidMount() {\n    //this.interval = setInterval(() => this.setState({time: moment()}), 1000);\n    //this.interval = setInterval(console.log(this), 1000);\n    //this.whereIsThis();\n  }\n\n  displayErrors(type, errorsArray) {\n    errorsArray.forEach((message) => {\n      this.setState({alert: {message: message, type: type}});\n    });\n  }\n\n  render() {\n    const options = {\n      // you can also just use 'bottom center'\n      position: positions.BOTTOM_CENTER,\n      timeout: 5000,\n      offset: '30px',\n      // you can also just use 'scale'\n      transition: transitions.SCALE\n    };\n    return (\n      <AlertProvider template={AlertTemplate} {...options}>\n        <div className=\"container\" id='container'>\n          <p><span>{this.state.time.format('ddd Do MMM HH:mm:ss')}</span>\n            <span className=\"right\">Good {this.timeOfDay}</span>\n          </p>\n          <Lights\n            api={this.api}\n          />\n        </div>\n        {this.state.alert && <Alert alert={this.state.alert}/>}\n      </AlertProvider>\n    );\n  }\n}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport App from \"./components/App.js\"\n\n// optional cofiguration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n};\n\nReactDOM.render(\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>\n  , document.getElementById(\"root\")\n);"],"sourceRoot":""}